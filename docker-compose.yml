version: '3.8'
services:
  sql-db:
    env_file:
      - .env
    image: postgres:16.1
    container_name: RecetasDB
    restart: always
    volumes:
      - ./db/sql/create_schema.sql:/docker-entrypoint-initdb.d/create_schema.sql
      - ./db/sql/data.sql:/docker-entrypoint-initdb.d/data.sql
      - data-recetas:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "${PORT_POSTGRES_HOST}:${PORT_POSTGRES_DOCKER}"
    networks:
      - net-recetas

  # backend-recetario:
  #   container_name: RecetasBackend
  #   image: BackendRecetario:0.0.1
  #   build:
  #     context: .
  #     dockerfile: back.Dockerfile
  #   ports:
  #     - "${PORT_BACKEND_HOST}:${PORT_BACKEND_DOCKER}"
  #   networks:
  #     - net-recetas
  #   depends_on:
  #     - sql-db
  #   restart: always

  # frontend-rectario:
  #   container_name: RectasFrontend
  #   image: frontend-recetario:0.0.1
  #   build:
  #     context: .
  #     dockerfile: front.dockerfile
  #   ports:
  #     - "${PORT_FRONT_HOST}:${PORT_FRONT_DOCKER}"
  #   networks:
  #     - net-recetas
    # depends_on:
    #   - backEnd-Recetario
    # restart: always

networks:
  net-recetas:
    driver: bridge
    enable_ipv6: false    
volumes:
  data-recetas:
